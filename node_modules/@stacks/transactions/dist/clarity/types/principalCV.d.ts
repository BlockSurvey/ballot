import { LengthPrefixedString } from '../../postcondition-types';
import { Address } from '../../common';
import { ClarityType } from '../constants';
declare type PrincipalCV = StandardPrincipalCV | ContractPrincipalCV;
interface StandardPrincipalCV {
    readonly type: ClarityType.PrincipalStandard;
    readonly address: Address;
}
interface ContractPrincipalCV {
    readonly type: ClarityType.PrincipalContract;
    readonly address: Address;
    readonly contractName: LengthPrefixedString;
}
declare function principalToString(principal: PrincipalCV): string;
declare function principalCV(principal: string): PrincipalCV;
declare function standardPrincipalCV(addressString: string): StandardPrincipalCV;
declare function standardPrincipalCVFromAddress(address: Address): StandardPrincipalCV;
declare function contractPrincipalCV(addressString: string, contractName: string): ContractPrincipalCV;
declare function contractPrincipalCVFromAddress(address: Address, contractName: LengthPrefixedString): ContractPrincipalCV;
declare function contractPrincipalCVFromStandard(sp: StandardPrincipalCV, contractName: string): ContractPrincipalCV;
export { PrincipalCV, StandardPrincipalCV, ContractPrincipalCV, principalCV, principalToString, standardPrincipalCV, standardPrincipalCVFromAddress, contractPrincipalCV, contractPrincipalCVFromAddress, contractPrincipalCVFromStandard, };
