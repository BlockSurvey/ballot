/// <reference types="node" />
import { BufferReader } from './bufferReader';
import { PubKeyEncoding, StacksMessageType } from './constants';
import { StacksPublicKey } from './keys';
import { MessageSignature } from './common';
export declare enum AuthFieldType {
    PublicKeyCompressed = 0,
    PublicKeyUncompressed = 1,
    SignatureCompressed = 2,
    SignatureUncompressed = 3
}
export interface TransactionAuthField {
    type: StacksMessageType.TransactionAuthField;
    pubKeyEncoding: PubKeyEncoding;
    contents: TransactionAuthFieldContents;
}
export declare type TransactionAuthFieldContents = StacksPublicKey | MessageSignature;
export declare function deserializeMessageSignature(bufferReader: BufferReader): MessageSignature;
export interface TransactionAuthField {
    type: StacksMessageType.TransactionAuthField;
    pubKeyEncoding: PubKeyEncoding;
    contents: TransactionAuthFieldContents;
}
export declare function createTransactionAuthField(pubKeyEncoding: PubKeyEncoding, contents: TransactionAuthFieldContents): TransactionAuthField;
export declare function deserializeTransactionAuthField(bufferReader: BufferReader): TransactionAuthField;
export declare function serializeMessageSignature(messageSignature: MessageSignature): Buffer;
export declare function serializeTransactionAuthField(field: TransactionAuthField): Buffer;
