import { FungibleConditionCode, NonFungibleConditionCode, PostConditionPrincipalID, PostConditionType, StacksMessageType } from './constants';
import { Address } from './common';
import { ClarityValue } from './clarity';
export interface StandardPrincipal {
    readonly type: StacksMessageType.Principal;
    readonly prefix: PostConditionPrincipalID.Standard;
    readonly address: Address;
}
export interface ContractPrincipal {
    readonly type: StacksMessageType.Principal;
    readonly prefix: PostConditionPrincipalID.Contract;
    readonly address: Address;
    readonly contractName: LengthPrefixedString;
}
export interface LengthPrefixedString {
    readonly type: StacksMessageType.LengthPrefixedString;
    readonly content: string;
    readonly lengthPrefixBytes: number;
    readonly maxLengthBytes: number;
}
export interface AssetInfo {
    readonly type: StacksMessageType.AssetInfo;
    readonly address: Address;
    readonly contractName: LengthPrefixedString;
    readonly assetName: LengthPrefixedString;
}
export interface STXPostCondition {
    readonly type: StacksMessageType.PostCondition;
    readonly conditionType: PostConditionType.STX;
    readonly principal: PostConditionPrincipal;
    readonly conditionCode: FungibleConditionCode;
    readonly amount: bigint;
}
export interface FungiblePostCondition {
    readonly type: StacksMessageType.PostCondition;
    readonly conditionType: PostConditionType.Fungible;
    readonly principal: PostConditionPrincipal;
    readonly conditionCode: FungibleConditionCode;
    readonly amount: bigint;
    readonly assetInfo: AssetInfo;
}
export interface NonFungiblePostCondition {
    readonly type: StacksMessageType.PostCondition;
    readonly conditionType: PostConditionType.NonFungible;
    readonly principal: PostConditionPrincipal;
    readonly conditionCode: NonFungibleConditionCode;
    readonly assetInfo: AssetInfo;
    readonly assetName: ClarityValue;
}
export declare function parseAssetInfoString(id: string): AssetInfo;
export declare function createLPString(content: string): LengthPrefixedString;
export declare function createLPString(content: string, lengthPrefixBytes: number): LengthPrefixedString;
export declare function createLPString(content: string, lengthPrefixBytes: number, maxLengthBytes: number): LengthPrefixedString;
export declare function createAssetInfo(addressString: string, contractName: string, assetName: string): AssetInfo;
export declare function createAddress(c32AddressString: string): Address;
export declare function parsePrincipalString(principalString: string): StandardPrincipal | ContractPrincipal;
export declare function createContractPrincipal(addressString: string, contractName: string): ContractPrincipal;
export declare function createStandardPrincipal(addressString: string): StandardPrincipal;
export declare type PostCondition = STXPostCondition | FungiblePostCondition | NonFungiblePostCondition;
export declare type PostConditionPrincipal = StandardPrincipal | ContractPrincipal;
