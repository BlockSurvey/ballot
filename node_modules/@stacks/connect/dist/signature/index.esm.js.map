{"version":3,"file":"index.esm.js","sources":["../../src/signature/index.ts"],"sourcesContent":["import { StacksTestnet } from '@stacks/network';\nimport { ChainID } from '@stacks/transactions';\nimport { createUnsecuredToken, TokenSigner } from 'jsontokens';\nimport { getKeys, getUserSession, hasAppPrivateKey } from '../transactions';\nimport {\n  CommonSignatureRequestOptions,\n  SignatureOptions,\n  SignaturePayload,\n  SignaturePopup,\n  SignatureRequestOptions,\n} from '../types/signature';\nimport { getStacksProvider } from '../utils';\n\nfunction getStxAddress(options: CommonSignatureRequestOptions) {\n  const { userSession, network } = options;\n\n  if (!userSession || !network) return undefined;\n  const stxAddresses = userSession?.loadUserData().profile?.stxAddress;\n  const chainIdToKey = {\n    [ChainID.Mainnet]: 'mainnet',\n    [ChainID.Testnet]: 'testnet',\n  };\n  const address: string | undefined = stxAddresses?.[chainIdToKey[network.chainId]];\n  return address;\n}\n\nasync function signPayload(payload: SignaturePayload, privateKey: string) {\n  const tokenSigner = new TokenSigner('ES256k', privateKey);\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n  return tokenSigner.signAsync({ ...payload } as any);\n}\n\nexport function getDefaultSignatureRequestOptions(options: CommonSignatureRequestOptions) {\n  const network = options.network || new StacksTestnet();\n  const userSession = getUserSession(options.userSession);\n  const defaults: CommonSignatureRequestOptions = {\n    ...options,\n    network,\n    userSession,\n  };\n  return {\n    stxAddress: getStxAddress(defaults),\n    ...defaults,\n  };\n}\n\nasync function openSignaturePopup({ token, options }: SignaturePopup) {\n  const provider = getStacksProvider();\n  if (!provider) {\n    throw new Error('Hiro Wallet not installed.');\n  }\n\n  try {\n    const signatureResponse = await provider.signatureRequest(token);\n    options.onFinish?.(signatureResponse);\n  } catch (error) {\n    console.error('[Connect] Error during signature request', error);\n    options.onCancel?.();\n  }\n}\n\nexport interface SignatureRequestPayload {\n  message: string;\n}\n\nexport const signMessage = async (options: SignatureRequestOptions) => {\n  const { userSession, ..._options } = options;\n  if (hasAppPrivateKey(userSession)) {\n    const { privateKey, publicKey } = getKeys(userSession);\n\n    const payload: SignaturePayload = {\n      ..._options,\n      publicKey,\n    };\n\n    return signPayload(payload, privateKey);\n  }\n  const payload = { ..._options };\n  return createUnsecuredToken(payload as any);\n};\n\nasync function generateTokenAndOpenPopup<T extends SignatureOptions>(\n  options: T,\n  makeTokenFn: (options: T) => Promise<string>\n) {\n  const token = await makeTokenFn({\n    ...getDefaultSignatureRequestOptions(options),\n    ...options,\n  } as T);\n  return openSignaturePopup({ token, options });\n}\n\nexport function openSignatureRequestPopup(options: SignatureRequestOptions) {\n  return generateTokenAndOpenPopup(options, signMessage);\n}\n"],"names":["options","userSession","network","stxAddresses","loadUserData","profile","stxAddress","chainIdToKey","ChainID","Mainnet","Testnet","address","chainId","payload","privateKey","tokenSigner","TokenSigner","signAsync","StacksTestnet","getUserSession","defaults","getStxAddress","token","provider","getStacksProvider","Error","signatureRequest","signatureResponse","onFinish","error","onCancel","signMessage","_options","hasAppPrivateKey","getKeys","publicKey","payload2","signPayload","createUnsecuredToken","makeTokenFn","getDefaultSignatureRequestOptions","openSignaturePopup","generateTokenAndOpenPopup"],"mappings":";;;;;;;;;;AAaA,sBAAA,CAAuBA,OAAvB,EAA+D;AAAA;;MACrDC,cAAyBD,QAAzBC;MAAaC,UAAYF,QAAZE;MAEjB,CAACD,WAAD,IAAgB,CAACC,gBAAgB;MAC/BC,eAAeF,wDAAAA,YAAaG,YAAb,GAA4BC,4BAA5B,sBAAqCC;MACpDC,kDACHC,QAAQC,WAAU,yBAClBD,QAAQE,WAAU;MAEfC,UAA8BR,gCAAAA,aAAeI,aAAaL,QAAQU;SACjED;;;;;;;;0EAGT,kBAA2BE,OAA3B,EAAsDC,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,YAAAA,WADR,GACsB,IAAIC,WAAJ,CAAgB,QAAhB,EAA0BF,UAA1B,CADtB;AAAA,8CAGSC,YAAYE,SAAZ,cAA2BJ,OAA3B,EAHT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;2CAMkDb,SAAwC;MAClFE,UAAUF,QAAQE,OAAR,IAAmB,IAAIgB,aAAJ;MAC7BjB,cAAckB,eAAenB,QAAQC;;MACrCmB,wBACDpB;AACHE,IAAAA,SAAAA;AACAD,IAAAA,aAAAA;;;;AAGAK,IAAAA,YAAYe,cAAcD;KACvBA;;;;;;;;iFAIP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoCE,YAAAA,KAApC,QAAoCA,KAApC,EAA2CtB,OAA3C,QAA2CA,OAA3C;AACQuB,YAAAA,QADR,GACmBC,mBADnB;;AAAA,gBAEOD,QAFP;AAAA;AAAA;AAAA;;AAAA,kBAGU,IAAIE,KAAJ,CAAU,4BAAV,CAHV;;AAAA;AAAA;AAAA;AAAA,mBAOoCF,SAASG,gBAAT,CAA0BJ,KAA1B,CAPpC;;AAAA;AAOUK,YAAAA,iBAPV;oBAQYC,oCAAAA,SAAWD;AARvB;AAAA;;AAAA;AAAA;AAAA;oBAUYE,MAAM;oBACNC,oCAAAA;;AAXZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;IAmBaC;oFAAc,iBAAO/B,OAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACjBC,YAAAA,WADiB,GACYD,OADZ,CACjBC,WADiB,EACD+B,QADC,iCACYhC,OADZ;;AAAA,iBAErBiC,iBAAiBhC,YAFI;AAAA;AAAA;AAAA;;AAAA,uBAGWiC,QAAQjC,YAHnB,EAGfa,UAHe,YAGfA,UAHe,EAGHqB,SAHG,YAGHA,SAHG;AAKjBC,YAAAA,QALiB,gBAMlBJ,QANkB;AAOrBG,cAAAA,WAAAA;AAPqB;AAAA,6CAUhBE,YAAYD,UAAStB,WAVL;;AAAA;AAYnBD,YAAAA,OAZmB,gBAYJmB,QAZI;AAAA,6CAalBM,qBAAqBzB,QAbH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;kBAAdkB;;;;;;;;;;wFAgBb,kBACE/B,OADF,EAEEuC,WAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAIsBA,yBACfC,kCAAkCxC,UAClCA,SANP;;AAAA;AAIQsB,YAAAA,KAJR;AAAA,8CAQSmB,mBAAmB;AAAEnB,cAAAA,OAAAA,KAAF;AAAStB,cAAAA,SAAAA;AAAT,cAR5B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;mCAW0CA,SAAkC;SACnE0C,0BAA0B1C,SAAS+B;;;;;"}