import { UserSession } from '@stacks/auth';
import { ContractCallOptions, ContractDeployOptions, TransactionOptions, STXTransferOptions, STXTransferSponsoredOptions, STXTransferRegularOptions, ContractDeployRegularOptions, ContractDeploySponsoredOptions, ContractCallRegularOptions, ContractCallSponsoredOptions } from '../types/transactions';
export declare const getUserSession: (_userSession?: UserSession | undefined) => UserSession;
export declare function hasAppPrivateKey(userSession?: UserSession): string | false;
export declare const getKeys: (_userSession?: UserSession | undefined) => {
    privateKey: string;
    publicKey: string;
};
export declare function getStxAddress(options: TransactionOptions): string | undefined;
export declare const makeContractCallToken: (options: ContractCallOptions) => Promise<string>;
export declare const makeContractDeployToken: (options: ContractDeployOptions) => Promise<string>;
export declare const makeSTXTransferToken: (options: STXTransferOptions) => Promise<string>;
export declare function openContractCall(options: ContractCallRegularOptions): Promise<void>;
export declare function openContractCall(options: ContractCallSponsoredOptions): Promise<void>;
export declare function openContractCall(options: ContractCallOptions): Promise<void>;
export declare function openContractDeploy(options: ContractDeployRegularOptions): Promise<void>;
export declare function openContractDeploy(options: ContractDeploySponsoredOptions): Promise<void>;
export declare function openContractDeploy(options: ContractDeployOptions): Promise<void>;
export declare function openSTXTransfer(options: STXTransferRegularOptions): Promise<void>;
export declare function openSTXTransfer(options: STXTransferSponsoredOptions): Promise<void>;
export declare function openSTXTransfer(options: STXTransferOptions): Promise<void>;
