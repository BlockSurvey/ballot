import { Component, h, Prop, State, Element } from '@stencil/core';
import CloseIcon from './assets/close-icon.svg';
import HiroWalletLogo from './assets/hiro-wallet-logo.svg';
import { getBrowser } from './utils';
const CHROME_BROWSER_URL = 'https://www.google.com/chrome/';
const BRAVE_BROWSER_URL = 'https://brave.com/';
const FIREFOX_BROWSER_URL = 'https://www.mozilla.org/en-US/';
const CHROME_STORE_URL = 'https://chrome.google.com/webstore/detail/hiro-wallet/ldinpeekobnhjjdofggfgjlcehhmanlj/';
const FIREFOX_STORE_URL = 'https://addons.mozilla.org/en-US/firefox/addon/hiro-wallet/';
export class Modal {
  handleCloseModal() {
    var _a, _b;
    this.modalEl.remove();
    (_b = (_a = this.authOptions).onCancel) === null || _b === void 0 ? void 0 : _b.call(_a);
  }
  handleDownloadPath(browser) {
    if (browser === 'Chrome') {
      window.open(CHROME_STORE_URL, '_blank');
    }
    else if (browser === 'Firefox') {
      window.open(FIREFOX_STORE_URL, '_blank');
    }
    else {
      window.open('https://www.hiro.so/wallet/install-web', '_blank');
    }
    this.hasOpenedInstall = true;
  }
  render() {
    const browser = getBrowser();
    return (h("div", { class: "modal-container" },
      h("div", { class: "modal-body" },
        h("div", { class: "modal-header" },
          h("div", { class: "header-left" },
            h("img", { src: HiroWalletLogo })),
          h("img", { class: "header-right", src: CloseIcon, onClick: () => this.handleCloseModal() })),
        browser ? (h("div", { class: "modal-content" },
          h("div", { class: "modal-illustration download-hiro-wallet" }),
          h("span", { class: "modal-title supported" },
            "Add Hiro Wallet to ",
            browser),
          h("div", { class: "modal-subtitle" },
            "Hiro Wallet is your gateway to Stacks apps like ",
            this.authOptions.appDetails.name,
            ". Add it to ",
            browser,
            " to continue."))) : (h("div", { class: "modal-content" },
          h("div", { class: "modal-illustration browser-not-supported" }),
          h("span", { class: "modal-title unsupported" }, "Your browser isn't supported"),
          h("div", { class: "modal-subtitle" },
            "To sign in to ",
            this.authOptions.appDetails.name,
            " using the Hiro Wallet browser extension, try",
            ` `,
            h("a", { href: CHROME_BROWSER_URL, target: "_blank" }, "Chrome"),
            `, `,
            h("a", { href: BRAVE_BROWSER_URL, target: "_blank" }, "Brave"),
            `, or `,
            h("a", { href: FIREFOX_BROWSER_URL, target: "_blank" }, "Firefox"),
            ` on desktop.`))),
        this.hasOpenedInstall ? (h("div", { class: "modal-subtitle" }, "After installing Hiro Wallet, reload this page and sign in.")) : browser ? (h("div", { class: "button-container" },
          h("button", { class: "button", onClick: () => {
              this.handleDownloadPath(browser);
            } }, "Download Hiro Wallet"))) : null,
        h("div", { class: "modal-footer" },
          h("span", { class: "link", onClick: () => window.open('https://www.hiro.so/wallet', '_blank') }, "About Hiro Wallet \u2192")))));
  }
  static get is() { return "connect-modal"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() { return {
    "$": ["modal.scss"]
  }; }
  static get styleUrls() { return {
    "$": ["modal.css"]
  }; }
  static get assetsDirs() { return ["assets"]; }
  static get properties() { return {
    "authOptions": {
      "type": "unknown",
      "mutable": false,
      "complexType": {
        "original": "AuthOptions",
        "resolved": "AuthOptions",
        "references": {
          "AuthOptions": {
            "location": "import",
            "path": "@stacks/connect/types/auth"
          }
        }
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      }
    }
  }; }
  static get states() { return {
    "hasOpenedInstall": {}
  }; }
  static get elementRef() { return "modalEl"; }
}
