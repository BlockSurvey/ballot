{"version":3,"sources":["webpack://c32check/webpack/universalModuleDefinition","webpack://c32check/webpack/bootstrap","webpack://c32check/./node_modules/buffer/index.js","webpack://c32check/./src/encoding.ts","webpack://c32check/./src/checksum.ts","webpack://c32check/./node_modules/cross-sha256/index.js","webpack://c32check/./src/index.ts","webpack://c32check/./node_modules/base64-js/index.js","webpack://c32check/./node_modules/ieee754/index.js","webpack://c32check/./src/address.ts","webpack://c32check/./src/base58check.ts","webpack://c32check/./node_modules/base-x/src/index.js","webpack://c32check/./node_modules/safe-buffer/index.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","base64","ieee754","customInspectSymbol","for","Buffer","SlowBuffer","length","alloc","INSPECT_MAX_BYTES","createBuffer","RangeError","buf","Uint8Array","setPrototypeOf","arg","encodingOrOffset","TypeError","allocUnsafe","from","string","encoding","isEncoding","byteLength","actual","write","slice","fromString","ArrayBuffer","isView","fromArrayLike","isInstance","buffer","fromArrayBuffer","SharedArrayBuffer","valueOf","b","obj","isBuffer","len","checked","copy","undefined","numberIsNaN","type","Array","isArray","data","fromObject","toPrimitive","assertSize","size","array","byteOffset","toString","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","val","dir","arrayIndexOf","indexOf","lastIndexOf","arr","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","push","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","fromCharCode","apply","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","e","typedArraySupport","console","error","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","Error","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","split","base64clean","src","dst","constructor","table","i16","c32decode","c32normalize","c32encode","c32","buffer_1","hex","c32input","toUpperCase","inputHex","minLength","match","carry","currentCode","nextCode","nextBits","nextLowBits","curC32Digit","unshift","C32leadingZeros","zeroPrefix","numLeadingZeroBytesInHex","count","join","numLeadingZeroBytes","carryBits","currentValue","currentHexDigit","hexLeadingZeros","hexStr","c32checkDecode","c32checkEncode","encoding_1","cross_sha256_1","c32checksum","dataHex","hashSha256","version","versionHex","checksumHex","c32str","c32data","versionChar","checksum","substring","sha256","sha256nodeCrypto","sha256js","_blockSize","_finalSize","_len","_w","_a","_b","_c","_d","_e","_f","_g","_h","_block","update","block","blockSize","accum","assigned","remainder","_update","digest","rem","bits","lowBits","highBits","hash","ch","z","maj","sigma0","sigma1","gamma0","gamma1","M","W","f","g","h","T1","K","T2","useCryptoModuleCache","nodeCryptoCreateHash","createHash","_nodeCryptoAvailable","isAvailable","cryptoModule","isNodeCryptoAvailable","instance","default","b58ToC32","c32ToB58","versions","c32addressDecode","c32address","checksum_1","address_1","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","len2","encodeChunk","lookup","num","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","isNaN","floor","log","LN2","base58check","mainnet","p2pkh","p2sh","testnet","ADDR_BITCOIN_TO_STACKS","ADDR_STACKS_TO_BITCOIN","hash160hex","c32addr","b58check","stacksVersion","addrInfo","decode","hash160String","addrVersion","prefix","c32string","bitcoinVersion","encode","basex","ALPHABET","forEach","check","index","_Buffer","BASE_MAP","charAt","xc","BASE","LEADER","FACTOR","iFACTOR","decodeUnsafe","source","psz","zeroes","b256","it3","it4","vch","pbegin","pend","b58","it1","it2","repeat","copyProps","SafeBuffer"],"mappings":"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","file":"c32check.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"c32check\"] = factory();\n\telse\n\t\troot[\"c32check\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol.for === 'function')\n    ? Symbol.for('nodejs.util.inspect.custom')\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.c32decode = exports.c32normalize = exports.c32encode = exports.c32 = void 0;\nvar buffer_1 = require(\"buffer/\");\nexports.c32 = '0123456789ABCDEFGHJKMNPQRSTVWXYZ';\nvar hex = '0123456789abcdef';\n/**\n * Encode a hex string as a c32 string.  Note that the hex string is assumed\n * to be big-endian (and the resulting c32 string will be as well).\n * @param {string} inputHex - the input to encode\n * @param {number} minLength - the minimum length of the c32 string\n * @returns {string} the c32check-encoded representation of the data, as a string\n */\nfunction c32encode(inputHex, minLength) {\n    // must be hex\n    if (!inputHex.match(/^[0-9a-fA-F]*$/)) {\n        throw new Error('Not a hex-encoded string');\n    }\n    if ((inputHex.length) % 2 !== 0) {\n        inputHex = \"0\" + inputHex;\n    }\n    inputHex = inputHex.toLowerCase();\n    var res = [];\n    var carry = 0;\n    for (var i = inputHex.length - 1; i >= 0; i--) {\n        if (carry < 4) {\n            var currentCode = hex.indexOf(inputHex[i]) >> carry;\n            var nextCode = 0;\n            if (i !== 0) {\n                nextCode = hex.indexOf(inputHex[i - 1]);\n            }\n            // carry = 0, nextBits is 1, carry = 1, nextBits is 2\n            var nextBits = 1 + carry;\n            var nextLowBits = (nextCode % (1 << nextBits)) << (5 - nextBits);\n            var curC32Digit = exports.c32[currentCode + nextLowBits];\n            carry = nextBits;\n            res.unshift(curC32Digit);\n        }\n        else {\n            carry = 0;\n        }\n    }\n    var C32leadingZeros = 0;\n    for (var i = 0; i < res.length; i++) {\n        if (res[i] !== '0') {\n            break;\n        }\n        else {\n            C32leadingZeros++;\n        }\n    }\n    res = res.slice(C32leadingZeros);\n    var zeroPrefix = buffer_1.Buffer.from(inputHex, 'hex').toString().match(/^\\u0000*/);\n    var numLeadingZeroBytesInHex = zeroPrefix ? zeroPrefix[0].length : 0;\n    for (var i = 0; i < numLeadingZeroBytesInHex; i++) {\n        res.unshift(exports.c32[0]);\n    }\n    if (minLength) {\n        var count = minLength - res.length;\n        for (var i = 0; i < count; i++) {\n            res.unshift(exports.c32[0]);\n        }\n    }\n    return res.join('');\n}\nexports.c32encode = c32encode;\n/*\n * Normalize a c32 string\n * @param {string} c32input - the c32-encoded input string\n * @returns {string} the canonical representation of the c32 input string\n */\nfunction c32normalize(c32input) {\n    // must be upper-case\n    // replace all O's with 0's\n    // replace all I's and L's with 1's\n    return c32input.toUpperCase()\n        .replace(/O/g, '0')\n        .replace(/L|I/g, '1');\n}\nexports.c32normalize = c32normalize;\n/*\n * Decode a c32 string back into a hex string.  Note that the c32 input\n * string is assumed to be big-endian (and the resulting hex string will\n * be as well).\n * @param {string} c32input - the c32-encoded input to decode\n * @param {number} minLength - the minimum length of the output hex string (in bytes)\n * @returns {string} the hex-encoded representation of the data, as a string\n */\nfunction c32decode(c32input, minLength) {\n    c32input = c32normalize(c32input);\n    // must result in a c32 string\n    if (!c32input.match(\"^[\" + exports.c32 + \"]*$\")) {\n        throw new Error('Not a c32-encoded string');\n    }\n    var zeroPrefix = c32input.match(\"^\" + exports.c32[0] + \"*\");\n    var numLeadingZeroBytes = zeroPrefix ? zeroPrefix[0].length : 0;\n    var res = [];\n    var carry = 0;\n    var carryBits = 0;\n    for (var i = c32input.length - 1; i >= 0; i--) {\n        if (carryBits === 4) {\n            res.unshift(hex[carry]);\n            carryBits = 0;\n            carry = 0;\n        }\n        var currentCode = exports.c32.indexOf(c32input[i]) << carryBits;\n        var currentValue = currentCode + carry;\n        var currentHexDigit = hex[currentValue % 16];\n        carryBits += 1;\n        carry = currentValue >> 4;\n        if (carry > 1 << carryBits) {\n            throw new Error('Panic error in decoding.');\n        }\n        res.unshift(currentHexDigit);\n    }\n    // one last carry\n    res.unshift(hex[carry]);\n    if (res.length % 2 === 1) {\n        res.unshift('0');\n    }\n    var hexLeadingZeros = 0;\n    for (var i = 0; i < res.length; i++) {\n        if (res[i] !== '0') {\n            break;\n        }\n        else {\n            hexLeadingZeros++;\n        }\n    }\n    res = res.slice(hexLeadingZeros - (hexLeadingZeros % 2));\n    var hexStr = res.join('');\n    for (var i = 0; i < numLeadingZeroBytes; i++) {\n        hexStr = \"00\" + hexStr;\n    }\n    if (minLength) {\n        var count = minLength * 2 - hexStr.length;\n        for (var i = 0; i < count; i += 2) {\n            hexStr = \"00\" + hexStr;\n        }\n    }\n    return hexStr;\n}\nexports.c32decode = c32decode;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.c32checkDecode = exports.c32checkEncode = void 0;\nvar buffer_1 = require(\"buffer/\");\nvar encoding_1 = require(\"./encoding\");\nvar cross_sha256_1 = require(\"cross-sha256\");\n/**\n * Get the c32check checksum of a hex-encoded string\n * @param {string} dataHex - the hex string\n * @returns {string} the c32 checksum, as a bin-encoded string\n */\nfunction c32checksum(dataHex) {\n    var dataHash = cross_sha256_1.hashSha256(cross_sha256_1.hashSha256(buffer_1.Buffer.from(dataHex, 'hex')));\n    var checksum = dataHash.slice(0, 4).toString('hex');\n    return checksum;\n}\n/**\n * Encode a hex string as a c32check string.  This is a lot like how\n * base58check works in Bitcoin-land, but this algorithm uses the\n * z-base-32 alphabet instead of the base58 alphabet.  The algorithm\n * is as follows:\n * * calculate the c32checksum of version + data\n * * c32encode version + data + c32checksum\n * @param {number} version - the version string (between 0 and 31)\n * @param {string} data - the data to encode\n * @returns {string} the c32check representation\n */\nfunction c32checkEncode(version, data) {\n    if (version < 0 || version >= 32) {\n        throw new Error('Invalid version (must be between 0 and 31)');\n    }\n    if (!data.match(/^[0-9a-fA-F]*$/)) {\n        throw new Error('Invalid data (not a hex string)');\n    }\n    data = data.toLowerCase();\n    if (data.length % 2 !== 0) {\n        data = \"0\" + data;\n    }\n    var versionHex = version.toString(16);\n    if (versionHex.length === 1) {\n        versionHex = \"0\" + versionHex;\n    }\n    var checksumHex = c32checksum(\"\" + versionHex + data);\n    var c32str = encoding_1.c32encode(\"\" + data + checksumHex);\n    return \"\" + encoding_1.c32[version] + c32str;\n}\nexports.c32checkEncode = c32checkEncode;\n/*\n * Decode a c32check string back into its version and data payload.  This is\n * a lot like how base58check works in Bitcoin-land, but this algorithm uses\n * the z-base-32 alphabet instead of the base58 alphabet.  The algorithm\n * is as follows:\n * * extract the version, data, and checksum\n * * verify the checksum matches c32checksum(version + data)\n * * return data\n * @param {string} c32data - the c32check-encoded string\n * @returns {array} [version (number), data (string)].  The returned data\n * will be a hex string.  Throws an exception if the checksum does not match.\n */\nfunction c32checkDecode(c32data) {\n    c32data = encoding_1.c32normalize(c32data);\n    var dataHex = encoding_1.c32decode(c32data.slice(1));\n    var versionChar = c32data[0];\n    var version = encoding_1.c32.indexOf(versionChar);\n    var checksum = dataHex.slice(-8);\n    var versionHex = version.toString(16);\n    if (versionHex.length === 1) {\n        versionHex = \"0\" + versionHex;\n    }\n    if (c32checksum(\"\" + versionHex + dataHex.substring(0, dataHex.length - 8)) !== checksum) {\n        throw new Error('Invalid c32check string: checksum mismatch');\n    }\n    return [version, dataHex.substring(0, dataHex.length - 8)];\n}\nexports.c32checkDecode = c32checkDecode;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hashSha256 = exports.sha256 = exports.sha256nodeCrypto = exports.sha256js = void 0;\nvar buffer_1 = require(\"buffer/\");\n/**\n * From https://github.com/crypto-browserify/sha.js/blob/master/sha256.js\n *\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\nvar sha256js = /** @class */ (function () {\n    function sha256js() {\n        this._blockSize = 64;\n        this._finalSize = 56;\n        this._len = 0;\n        this._w = new Array(64);\n        this._a = 0x6a09e667;\n        this._b = 0xbb67ae85;\n        this._c = 0x3c6ef372;\n        this._d = 0xa54ff53a;\n        this._e = 0x510e527f;\n        this._f = 0x9b05688c;\n        this._g = 0x1f83d9ab;\n        this._h = 0x5be0cd19;\n        this._block = buffer_1.Buffer.alloc(this._blockSize);\n    }\n    sha256js.prototype.update = function (data, encoding) {\n        if (typeof data === 'string') {\n            encoding = encoding || 'utf8';\n            data = buffer_1.Buffer.from(data, encoding);\n        }\n        var block = this._block;\n        var blockSize = this._blockSize;\n        var length = data.length;\n        var accum = this._len;\n        for (var offset = 0; offset < length;) {\n            var assigned = accum % blockSize;\n            var remainder = Math.min(length - offset, blockSize - assigned);\n            for (var i = 0; i < remainder; i++) {\n                block[assigned + i] = data[offset + i];\n            }\n            accum += remainder;\n            offset += remainder;\n            if ((accum % blockSize) === 0) {\n                this._update(block);\n            }\n        }\n        this._len += length;\n        return this;\n    };\n    sha256js.prototype.digest = function (encoding) {\n        var rem = this._len % this._blockSize;\n        this._block[rem] = 0x80;\n        // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n        // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n        this._block.fill(0, rem + 1);\n        if (rem >= this._finalSize) {\n            this._update(this._block);\n            this._block.fill(0);\n        }\n        var bits = this._len * 8;\n        // uint32\n        if (bits <= 0xffffffff) {\n            this._block.writeUInt32BE(bits, this._blockSize - 4);\n            // uint64\n        }\n        else {\n            var lowBits = (bits & 0xffffffff) >>> 0;\n            var highBits = (bits - lowBits) / 0x100000000;\n            this._block.writeUInt32BE(highBits, this._blockSize - 8);\n            this._block.writeUInt32BE(lowBits, this._blockSize - 4);\n        }\n        this._update(this._block);\n        var hash = buffer_1.Buffer.alloc(32);\n        hash.writeInt32BE(this._a, 0);\n        hash.writeInt32BE(this._b, 4);\n        hash.writeInt32BE(this._c, 8);\n        hash.writeInt32BE(this._d, 12);\n        hash.writeInt32BE(this._e, 16);\n        hash.writeInt32BE(this._f, 20);\n        hash.writeInt32BE(this._g, 24);\n        hash.writeInt32BE(this._h, 28);\n        return encoding ? hash.toString(encoding) : hash;\n    };\n    sha256js.prototype.ch = function (x, y, z) {\n        return z ^ (x & (y ^ z));\n    };\n    sha256js.prototype.maj = function (x, y, z) {\n        return (x & y) | (z & (x | y));\n    };\n    sha256js.prototype.sigma0 = function (x) {\n        return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10);\n    };\n    sha256js.prototype.sigma1 = function (x) {\n        return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7);\n    };\n    sha256js.prototype.gamma0 = function (x) {\n        return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3);\n    };\n    sha256js.prototype.gamma1 = function (x) {\n        return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10);\n    };\n    sha256js.prototype._update = function (M) {\n        var W = this._w;\n        var a = this._a | 0;\n        var b = this._b | 0;\n        var c = this._c | 0;\n        var d = this._d | 0;\n        var e = this._e | 0;\n        var f = this._f | 0;\n        var g = this._g | 0;\n        var h = this._h | 0;\n        var i = 0;\n        for (; i < 16; ++i)\n            W[i] = M.readInt32BE(i * 4);\n        for (; i < 64; ++i)\n            W[i] = (this.gamma1(W[i - 2]) + W[i - 7] + this.gamma0(W[i - 15]) + W[i - 16]) | 0;\n        for (var j = 0; j < 64; ++j) {\n            var T1 = (h + this.sigma1(e) + this.ch(e, f, g) + sha256js.K[j] + W[j]) | 0;\n            var T2 = (this.sigma0(a) + this.maj(a, b, c)) | 0;\n            h = g;\n            g = f;\n            f = e;\n            e = (d + T1) | 0;\n            d = c;\n            c = b;\n            b = a;\n            a = (T1 + T2) | 0;\n        }\n        this._a = (a + this._a) | 0;\n        this._b = (b + this._b) | 0;\n        this._c = (c + this._c) | 0;\n        this._d = (d + this._d) | 0;\n        this._e = (e + this._e) | 0;\n        this._f = (f + this._f) | 0;\n        this._g = (g + this._g) | 0;\n        this._h = (h + this._h) | 0;\n    };\n    sha256js.K = [\n        0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n        0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n        0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n        0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n        0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n        0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n        0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n        0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n        0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n        0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n        0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n        0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n        0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n        0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n        0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n        0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n    ];\n    return sha256js;\n}());\nexports.sha256js = sha256js;\nvar sha256nodeCrypto = /** @class */ (function () {\n    function sha256nodeCrypto() {\n        if (!sha256nodeCrypto.useCryptoModuleCache || sha256nodeCrypto.nodeCryptoCreateHash === undefined) {\n            sha256nodeCrypto.nodeCryptoCreateHash = require('crypto').createHash;\n        }\n        this.hash = sha256nodeCrypto.nodeCryptoCreateHash('sha256');\n    }\n    sha256nodeCrypto.prototype.update = function (data, encoding) {\n        this.hash.update(data, encoding);\n        return this;\n    };\n    sha256nodeCrypto.prototype.digest = function (encoding) {\n        if (encoding) {\n            return this.hash.digest(encoding);\n        }\n        else {\n            return this.hash.digest();\n        }\n    };\n    sha256nodeCrypto.useCryptoModuleCache = true;\n    return sha256nodeCrypto;\n}());\nexports.sha256nodeCrypto = sha256nodeCrypto;\nvar _nodeCryptoAvailable = undefined;\nfunction isNodeCryptoAvailable() {\n    if (sha256nodeCrypto.useCryptoModuleCache && _nodeCryptoAvailable !== undefined) {\n        return _nodeCryptoAvailable;\n    }\n    var isAvailable = false;\n    try {\n        if (typeof require === 'function') {\n            var cryptoModule = require('crypto');\n            isAvailable = cryptoModule && typeof cryptoModule.createHash === 'function';\n        }\n    }\n    catch (error) {\n        // ignore\n    }\n    _nodeCryptoAvailable = isAvailable;\n    return isAvailable;\n}\nvar sha256 = /** @class */ (function () {\n    function sha256() {\n        if (isNodeCryptoAvailable()) {\n            this.instance = new sha256nodeCrypto();\n        }\n        else {\n            this.instance = new sha256js();\n        }\n    }\n    sha256.prototype.update = function (data, encoding) {\n        this.instance.update(data, encoding);\n        return this;\n    };\n    sha256.prototype.digest = function (encoding) {\n        if (encoding) {\n            return this.instance.digest(encoding);\n        }\n        else {\n            return this.instance.digest();\n        }\n    };\n    return sha256;\n}());\nexports.sha256 = sha256;\n/**\n * Use Nodejs `crypto` module if available, otherwise uses js implementation.\n * @param data Input data to hash.\n */\nfunction hashSha256(data) {\n    return new sha256().update(data).digest();\n}\nexports.hashSha256 = hashSha256;\nexports.default = hashSha256;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.b58ToC32 = exports.c32ToB58 = exports.versions = exports.c32normalize = exports.c32addressDecode = exports.c32address = exports.c32checkDecode = exports.c32checkEncode = exports.c32decode = exports.c32encode = void 0;\nvar encoding_1 = require(\"./encoding\");\nObject.defineProperty(exports, \"c32encode\", { enumerable: true, get: function () { return encoding_1.c32encode; } });\nObject.defineProperty(exports, \"c32decode\", { enumerable: true, get: function () { return encoding_1.c32decode; } });\nObject.defineProperty(exports, \"c32normalize\", { enumerable: true, get: function () { return encoding_1.c32normalize; } });\nvar checksum_1 = require(\"./checksum\");\nObject.defineProperty(exports, \"c32checkEncode\", { enumerable: true, get: function () { return checksum_1.c32checkEncode; } });\nObject.defineProperty(exports, \"c32checkDecode\", { enumerable: true, get: function () { return checksum_1.c32checkDecode; } });\nvar address_1 = require(\"./address\");\nObject.defineProperty(exports, \"c32address\", { enumerable: true, get: function () { return address_1.c32address; } });\nObject.defineProperty(exports, \"c32addressDecode\", { enumerable: true, get: function () { return address_1.c32addressDecode; } });\nObject.defineProperty(exports, \"c32ToB58\", { enumerable: true, get: function () { return address_1.c32ToB58; } });\nObject.defineProperty(exports, \"b58ToC32\", { enumerable: true, get: function () { return address_1.b58ToC32; } });\nObject.defineProperty(exports, \"versions\", { enumerable: true, get: function () { return address_1.versions; } });\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.c32ToB58 = exports.b58ToC32 = exports.c32addressDecode = exports.c32address = exports.versions = void 0;\nvar checksum_1 = require(\"./checksum\");\nvar base58check = require(\"./base58check\");\nexports.versions = {\n    mainnet: {\n        p2pkh: 22,\n        p2sh: 20 // 'M'\n    },\n    testnet: {\n        p2pkh: 26,\n        p2sh: 21 // 'N'\n    }\n};\n// address conversion : bitcoin to stacks\nvar ADDR_BITCOIN_TO_STACKS = {};\nADDR_BITCOIN_TO_STACKS[0] = exports.versions.mainnet.p2pkh;\nADDR_BITCOIN_TO_STACKS[5] = exports.versions.mainnet.p2sh;\nADDR_BITCOIN_TO_STACKS[111] = exports.versions.testnet.p2pkh;\nADDR_BITCOIN_TO_STACKS[196] = exports.versions.testnet.p2sh;\n// address conversion : stacks to bitcoin \nvar ADDR_STACKS_TO_BITCOIN = {};\nADDR_STACKS_TO_BITCOIN[exports.versions.mainnet.p2pkh] = 0;\nADDR_STACKS_TO_BITCOIN[exports.versions.mainnet.p2sh] = 5;\nADDR_STACKS_TO_BITCOIN[exports.versions.testnet.p2pkh] = 111;\nADDR_STACKS_TO_BITCOIN[exports.versions.testnet.p2sh] = 196;\n/**\n * Make a c32check address with the given version and hash160\n * The only difference between a c32check string and c32 address\n * is that the letter 'S' is pre-pended.\n * @param {number} version - the address version number\n * @param {string} hash160hex - the hash160 to encode (must be a hash160)\n * @returns {string} the address\n */\nfunction c32address(version, hash160hex) {\n    if (!hash160hex.match(/^[0-9a-fA-F]{40}$/)) {\n        throw new Error('Invalid argument: not a hash160 hex string');\n    }\n    var c32string = checksum_1.c32checkEncode(version, hash160hex);\n    return \"S\" + c32string;\n}\nexports.c32address = c32address;\n/**\n * Decode a c32 address into its version and hash160\n * @param {string} c32addr - the c32check-encoded address\n * @returns {[number, string]} a tuple with the version and hash160\n */\nfunction c32addressDecode(c32addr) {\n    if (c32addr.length <= 5) {\n        throw new Error('Invalid c32 address: invalid length');\n    }\n    if (c32addr[0] != 'S') {\n        throw new Error('Invalid c32 address: must start with \"S\"');\n    }\n    return checksum_1.c32checkDecode(c32addr.slice(1));\n}\nexports.c32addressDecode = c32addressDecode;\n/*\n * Convert a base58check address to a c32check address.\n * Try to convert the version number if one is not given.\n * @param {string} b58check - the base58check encoded address\n * @param {number} version - the version number, if not inferred from the address\n * @returns {string} the c32 address with the given version number (or the\n *   semantically-equivalent c32 version number, if not given)\n */\nfunction b58ToC32(b58check, version) {\n    if (version === void 0) { version = -1; }\n    var addrInfo = base58check.decode(b58check);\n    var hash160String = addrInfo.data.toString('hex');\n    var addrVersion = parseInt(addrInfo.prefix.toString('hex'), 16);\n    var stacksVersion;\n    if (version < 0) {\n        stacksVersion = addrVersion;\n        if (ADDR_BITCOIN_TO_STACKS[addrVersion] !== undefined) {\n            stacksVersion = ADDR_BITCOIN_TO_STACKS[addrVersion];\n        }\n    }\n    else {\n        stacksVersion = version;\n    }\n    return c32address(stacksVersion, hash160String);\n}\nexports.b58ToC32 = b58ToC32;\n/*\n * Convert a c32check address to a base58check address.\n * @param {string} c32string - the c32check address\n * @param {number} version - the version number, if not inferred from the address\n * @returns {string} the base58 address with the given version number (or the\n *    semantically-equivalent bitcoin version number, if not given)\n */\nfunction c32ToB58(c32string, version) {\n    if (version === void 0) { version = -1; }\n    var addrInfo = c32addressDecode(c32string);\n    var stacksVersion = addrInfo[0];\n    var hash160String = addrInfo[1];\n    var bitcoinVersion;\n    if (version < 0) {\n        bitcoinVersion = stacksVersion;\n        if (ADDR_STACKS_TO_BITCOIN[stacksVersion] !== undefined) {\n            bitcoinVersion = ADDR_STACKS_TO_BITCOIN[stacksVersion];\n        }\n    }\n    else {\n        bitcoinVersion = version;\n    }\n    var prefix = bitcoinVersion.toString(16);\n    if (prefix.length === 1) {\n        prefix = \"0\" + prefix;\n    }\n    return base58check.encode(hash160String, prefix);\n}\nexports.c32ToB58 = c32ToB58;\n","/*\n * From https://github.com/wzbg/base58check\n * @Author: zyc\n * @Date:   2016-09-11 23:36:05\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decode = exports.encode = void 0;\nvar buffer_1 = require(\"buffer/\");\nvar cross_sha256_1 = require(\"cross-sha256\");\nvar basex = require(\"base-x\");\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nfunction encode(data, prefix, encoding) {\n    if (prefix === void 0) { prefix = '00'; }\n    if (encoding === void 0) { encoding = 'hex'; }\n    if (typeof data === 'string') {\n        data = new buffer_1.Buffer(data, encoding);\n    }\n    if (!(data instanceof buffer_1.Buffer)) {\n        throw new TypeError('\"data\" argument must be an Array of Buffers');\n    }\n    if (!(prefix instanceof buffer_1.Buffer)) {\n        prefix = new buffer_1.Buffer(prefix, encoding);\n    }\n    var hash = buffer_1.Buffer.concat([prefix, data]);\n    hash = cross_sha256_1.hashSha256(hash);\n    hash = cross_sha256_1.hashSha256(hash);\n    hash = buffer_1.Buffer.concat([prefix, data, hash.slice(0, 4)]);\n    return basex(ALPHABET).encode(hash);\n}\nexports.encode = encode;\nfunction decode(string, encoding) {\n    var buffer = new buffer_1.Buffer(basex(ALPHABET).decode(string));\n    var prefix = buffer.slice(0, 1);\n    var data = buffer.slice(1, -4);\n    var hash = buffer_1.Buffer.concat([prefix, data]);\n    hash = cross_sha256_1.hashSha256(hash);\n    hash = cross_sha256_1.hashSha256(hash);\n    buffer.slice(-4).forEach(function (check, index) {\n        if (check !== hash[index]) {\n            throw new Error('Invalid checksum');\n        }\n    });\n    if (encoding) {\n        prefix = prefix.toString(encoding);\n        data = data.toString(encoding);\n    }\n    return { prefix: prefix, data: data };\n}\nexports.decode = decode;\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n"],"sourceRoot":""}