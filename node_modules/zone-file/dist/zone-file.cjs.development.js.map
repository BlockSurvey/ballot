{"version":3,"file":"zone-file.cjs.development.js","sources":["../src/zoneFileTemplate.ts","../src/makeZoneFile.ts","../src/parseZoneFile.ts","../src/zoneFile.ts"],"sourcesContent":["export function getZoneFileTemplate() {\n  return '{$origin}\\n\\\n{$ttl}\\n\\\n\\n\\\n; SOA Record\\n\\\n{name} {ttl}    IN  SOA {mname}{rname}(\\n\\\n{serial} ;serial\\n\\\n{refresh} ;refresh\\n\\\n{retry} ;retry\\n\\\n{expire} ;expire\\n\\\n{minimum} ;minimum ttl\\n\\\n)\\n\\\n\\n\\\n; NS Records\\n\\\n{ns}\\n\\\n\\n\\\n; MX Records\\n\\\n{mx}\\n\\\n\\n\\\n; A Records\\n\\\n{a}\\n\\\n\\n\\\n; AAAA Records\\n\\\n{aaaa}\\n\\\n\\n\\\n; CNAME Records\\n\\\n{cname}\\n\\\n\\n\\\n; PTR Records\\n\\\n{ptr}\\n\\\n\\n\\\n; TXT Records\\n\\\n{txt}\\n\\\n\\n\\\n; SRV Records\\n\\\n{srv}\\n\\\n\\n\\\n; SPF Records\\n\\\n{spf}\\n\\\n\\n\\\n; URI Records\\n\\\n{uri}\\n\\\n';\n}\n","import {\n  AType,\n  CNAMEType,\n  MXType,\n  NSType,\n  SoaType,\n  SPFType,\n  SRVType,\n  TXTType,\n  URIType,\n  ZoneFileObject,\n} from './zoneFile';\n\nimport { getZoneFileTemplate } from './zoneFileTemplate';\n\nexport function makeZoneFile(jsonZoneFile: ZoneFileObject, template: string = getZoneFileTemplate()) {\n  template = processOrigin(jsonZoneFile['$origin'], template);\n  template = processTTL(jsonZoneFile['$ttl'], template);\n  template = processSOA(jsonZoneFile['soa'], template);\n  template = processNS(jsonZoneFile['ns'], template);\n  template = processA(jsonZoneFile['a'], template);\n  template = processAAAA(jsonZoneFile['aaaa'], template);\n  template = processCNAME(jsonZoneFile['cname'], template);\n  template = processMX(jsonZoneFile['mx'], template);\n  template = processPTR(jsonZoneFile['ptr'], template);\n  template = processTXT(jsonZoneFile['txt'], template);\n  template = processSRV(jsonZoneFile['srv'], template);\n  template = processSPF(jsonZoneFile['spf'], template);\n  template = processURI(jsonZoneFile['uri'], template);\n  template = processValues(jsonZoneFile, template);\n  return template.replace(/\\n{2,}/gim, '\\n\\n');\n}\n\nfunction processOrigin(data: string | undefined, template: string) {\n  let ret = '';\n  if (typeof data !== 'undefined') {\n    ret += '$ORIGIN ' + data;\n  }\n  return template.replace('{$origin}', ret);\n}\n\nfunction processTTL(data: number | undefined, template: string) {\n  let ret = '';\n  if (typeof data !== 'undefined') {\n    ret += '$TTL ' + data;\n  }\n  return template.replace('{$ttl}', ret);\n}\n\nfunction processSOA(data: SoaType | undefined, template: string) {\n  let ret = template;\n  if (typeof data !== 'undefined') {\n    data.name = data.name || '@';\n    data.ttl = data.ttl || '';\n    for (const key in data) {\n      const value = (data as Record<string, string>)[key];\n      ret = ret.replace('{' + key + '}', value + '\\t');\n    }\n  }\n  return ret;\n}\n\nfunction processNS(data: NSType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tNS\\t' + record.host + '\\n';\n    }\n  }\n  return template.replace('{ns}', ret);\n}\n\nfunction processA(data: AType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tA\\t' + record.ip + '\\n';\n    }\n  }\n  return template.replace('{a}', ret);\n}\n\nfunction processAAAA(data: AType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tAAAA\\t' + record.ip + '\\n';\n    }\n  }\n  return template.replace('{aaaa}', ret);\n}\n\nfunction processCNAME(data: CNAMEType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tCNAME\\t' + record.alias + '\\n';\n    }\n  }\n  return template.replace('{cname}', ret);\n}\n\nfunction processMX(data: MXType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tMX\\t' + record.preference + '\\t' + record.host + '\\n';\n    }\n  }\n  return template.replace('{mx}', ret);\n}\n\nfunction processPTR(data: NSType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tPTR\\t' + record.host + '\\n';\n    }\n  }\n  return template.replace('{ptr}', ret);\n}\n\nfunction processTXT(data: TXTType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tTXT\\t';\n      const txtData = record.txt;\n      if (typeof txtData === 'string') {\n        ret += '\"' + txtData + '\"';\n      } else if (txtData instanceof Array) {\n        ret += txtData\n          .map(function(datum) {\n            return '\"' + datum + '\"';\n          })\n          .join(' ');\n      }\n      ret += '\\n';\n    }\n  }\n  return template.replace('{txt}', ret);\n}\n\nfunction processSRV(data: SRVType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tSRV\\t' + record.priority + '\\t';\n      ret += record.weight + '\\t';\n      ret += record.port + '\\t';\n      ret += record.target + '\\n';\n    }\n  }\n  return template.replace('{srv}', ret);\n}\n\nfunction processSPF(data: SPFType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tSPF\\t' + record.data + '\\n';\n    }\n  }\n  return template.replace('{spf}', ret);\n}\n\nfunction processURI(data: URIType[] | undefined, template: string) {\n  let ret = '';\n  if (data) {\n    for (const record of data) {\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tURI\\t' + record.priority + '\\t';\n      ret += record.weight + '\\t';\n      ret += '\"' + record.target + '\"\\n';\n    }\n  }\n  return template.replace('{uri}', ret);\n}\n\nfunction processValues(jsonZoneFile: ZoneFileObject, template: string) {\n  template = template.replace(\n    '{zone}',\n    jsonZoneFile['$origin'] || (jsonZoneFile['soa'] ? jsonZoneFile['soa']['name'] : false) || ''\n  );\n  template = template.replace('{datetime}', new Date().toISOString());\n  const time = Math.round(Date.now() / 1000);\n  return template.replace('{time}', `${time}`);\n}\n","import {\n  NSType,\n  AType,\n  CNAMEType,\n  MXType,\n  TXTType,\n  SRVType,\n  SPFType,\n  URIType,\n  ZoneFileObject,\n  SoaType,\n} from './zoneFile';\n\nexport function parseZoneFile(text: string) {\n  text = removeComments(text);\n  text = flatten(text);\n  return parseRRs(text);\n}\n\nfunction removeComments(text: string) {\n  const re = /(^|[^\\\\]);.*/g;\n  return text.replace(re, function(_m, g1) {\n    return g1 ? g1 : ''; // if g1 is set/matched, re-insert it, else remove\n  });\n}\n\nfunction flatten(text: string) {\n  const captured = [];\n  const re = /\\([\\s\\S]*?\\)/gim;\n  let match = re.exec(text);\n  while (match !== null) {\n    const replacement = match[0].replace(/\\s+/gm, ' ');\n    captured.push({ match, replacement });\n    // captured Text, index, input\n    match = re.exec(text);\n  }\n  const arrText = text.split('');\n  for (const cur of captured) {\n    const { match, replacement } = cur;\n    arrText.splice(match.index, match[0].length, replacement);\n  }\n  return arrText.join('').replace(/\\(|\\)/gim, ' ');\n}\n\nfunction parseRRs(text: string) {\n  const ret: ZoneFileObject = {};\n  const rrs = text.split('\\n');\n  for (const rr of rrs) {\n    if (!rr || !rr.trim()) {\n      continue;\n    }\n    const uRR = rr.toUpperCase();\n    if (/\\s+TXT\\s+/.test(uRR)) {\n      ret.txt = ret.txt || [];\n      ret.txt.push(parseTXT(rr));\n    } else if (uRR.indexOf('$ORIGIN') === 0) {\n      ret.$origin = rr.split(/\\s+/g)[1];\n    } else if (uRR.indexOf('$TTL') === 0) {\n      ret.$ttl = parseInt(rr.split(/\\s+/g)[1], 10);\n    } else if (/\\s+SOA\\s+/.test(uRR)) {\n      ret.soa = parseSOA(rr);\n    } else if (/\\s+NS\\s+/.test(uRR)) {\n      ret.ns = ret.ns || [];\n      ret.ns.push(parseNS(rr));\n    } else if (/\\s+A\\s+/.test(uRR)) {\n      ret.a = ret.a || [];\n      ret.a.push(parseA(rr, ret.a));\n    } else if (/\\s+AAAA\\s+/.test(uRR)) {\n      ret.aaaa = ret.aaaa || [];\n      ret.aaaa.push(parseAAAA(rr));\n    } else if (/\\s+CNAME\\s+/.test(uRR)) {\n      ret.cname = ret.cname || [];\n      ret.cname.push(parseCNAME(rr));\n    } else if (/\\s+MX\\s+/.test(uRR)) {\n      ret.mx = ret.mx || [];\n      ret.mx.push(parseMX(rr));\n    } else if (/\\s+PTR\\s+/.test(uRR)) {\n      ret.ptr = ret.ptr || [];\n      ret.ptr.push(parsePTR(rr, ret.ptr, ret.$origin));\n    } else if (/\\s+SRV\\s+/.test(uRR)) {\n      ret.srv = ret.srv || [];\n      ret.srv.push(parseSRV(rr));\n    } else if (/\\s+SPF\\s+/.test(uRR)) {\n      ret.spf = ret.spf || [];\n      ret.spf.push(parseSPF(rr));\n    } else if (/\\s+URI\\s+/.test(uRR)) {\n      ret.uri = ret.uri || [];\n      ret.uri.push(parseURI(rr));\n    }\n  }\n  return ret;\n}\n\nfunction parseSOA(rr: string) {\n  const soa: SoaType = {};\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const l = rrTokens.length;\n  soa.name = rrTokens[0];\n  soa.minimum = parseInt(rrTokens[l - 1], 10);\n  soa.expire = parseInt(rrTokens[l - 2], 10);\n  soa.retry = parseInt(rrTokens[l - 3], 10);\n  soa.refresh = parseInt(rrTokens[l - 4], 10);\n  soa.serial = parseInt(rrTokens[l - 5], 10);\n  soa.rname = rrTokens[l - 6];\n  soa.mname = rrTokens[l - 7];\n  if (!isNaN((rrTokens[1] as unknown) as number)) soa.ttl = parseInt(rrTokens[1], 10);\n  return soa;\n}\n\nfunction parseNS(rr: string) {\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const l = rrTokens.length;\n  const result: NSType = {\n    name: rrTokens[0],\n    host: rrTokens[l - 1],\n  };\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseA(rr: string, recordsSoFar: AType[]) {\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const urrTokens = rr\n    .trim()\n    .toUpperCase()\n    .split(/\\s+/g);\n  const l = rrTokens.length;\n  const result: AType = {\n    name: rrTokens[0],\n    ip: rrTokens[l - 1],\n  };\n\n  if (urrTokens.lastIndexOf('A') === 0) {\n    if (recordsSoFar.length) {\n      result.name = recordsSoFar[recordsSoFar.length - 1].name;\n    } else {\n      result.name = '@';\n    }\n  }\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseAAAA(rr: string) {\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const l = rrTokens.length;\n  const result: AType = {\n    name: rrTokens[0],\n    ip: rrTokens[l - 1],\n  };\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseCNAME(rr: string) {\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const l = rrTokens.length;\n  const result: CNAMEType = {\n    name: rrTokens[0],\n    alias: rrTokens[l - 1],\n  };\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseMX(rr: string) {\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const l = rrTokens.length;\n  const result: MXType = {\n    name: rrTokens[0],\n    preference: parseInt(rrTokens[l - 2], 10),\n    host: rrTokens[l - 1],\n  };\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseTXT(rr: string) {\n  const rrTokens = rr.trim().match(/[^\\s\"']+|\"[^\"]*\"|'[^']*'/g);\n  if (!rrTokens) throw new Error('Failure to tokenize TXT record');\n  const l = rrTokens.length;\n  const indexTXT = rrTokens.indexOf('TXT');\n\n  function stripText(txt: string) {\n    if (txt.indexOf('\"') > -1) {\n      txt = txt.split('\"')[1];\n    }\n    return txt;\n  }\n\n  let tokenTxt: string | string[];\n  if (l - indexTXT - 1 > 1) {\n    tokenTxt = [...rrTokens.slice(indexTXT + 1).map(stripText)];\n  } else {\n    tokenTxt = stripText(rrTokens[l - 1]);\n  }\n\n  const result: TXTType = {\n    name: rrTokens[0],\n    txt: tokenTxt,\n  };\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parsePTR(rr: string, recordsSoFar: NSType[], currentOrigin: string | undefined) {\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const urrTokens = rr\n    .trim()\n    .toUpperCase()\n    .split(/\\s+/g);\n\n  if (urrTokens.lastIndexOf('PTR') === 0 && recordsSoFar[recordsSoFar.length - 1]) {\n    rrTokens.unshift(recordsSoFar[recordsSoFar.length - 1].name as string);\n  }\n\n  const l = rrTokens.length;\n  const result: NSType = {\n    name: rrTokens[0],\n    fullname: rrTokens[0] + '.' + currentOrigin,\n    host: rrTokens[l - 1],\n  };\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseSRV(rr: string) {\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const l = rrTokens.length;\n  const result: SRVType = {\n    name: rrTokens[0],\n    target: rrTokens[l - 1],\n    priority: parseInt(rrTokens[l - 4], 10),\n    weight: parseInt(rrTokens[l - 3], 10),\n    port: parseInt(rrTokens[l - 2], 10),\n  };\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseSPF(rr: string) {\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const result: SPFType = {\n    name: rrTokens[0],\n    data: '',\n  };\n\n  let l = rrTokens.length;\n  while (l-- > 4) {\n    result.data = rrTokens[l] + ' ' + result.data.trim();\n  }\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseURI(rr: string) {\n  const rrTokens = rr.trim().split(/\\s+/g);\n  const l = rrTokens.length;\n  const result: URIType = {\n    name: rrTokens[0],\n    target: rrTokens[l - 1].replace(/\"/g, ''),\n    priority: parseInt(rrTokens[l - 3], 10),\n    weight: parseInt(rrTokens[l - 2], 10),\n  };\n\n  if (!isNaN((rrTokens[1] as unknown) as number)) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n","import { makeZoneFile } from './makeZoneFile';\nimport { parseZoneFile } from './parseZoneFile';\n\nexport type SoaType = {\n  name?: string;\n  ttl?: number | string;\n  minimum?: number;\n  expire?: number;\n  retry?: number;\n  refresh?: number;\n  serial?: number;\n  rname?: string;\n  mname?: string;\n};\nexport type NSType = { name: string; ttl?: number; host: string; fullname?: string };\nexport type AType = { name: string; ttl?: number; ip: string };\nexport type CNAMEType = { name: string; ttl?: number; alias: string };\nexport type MXType = { name: string; ttl?: number; host: string; preference: number };\nexport type TXTType = { name: string; ttl?: number; txt: string | string[] };\nexport type SRVType = { name: string; ttl?: number; priority: number; weight: number; port: number; target: string };\nexport type SPFType = { name: string; ttl?: number; data: string };\nexport type URIType = { name: string; ttl?: number; priority: number; weight: number; target: string };\n\nexport type ZoneFileObject = {\n  $origin?: string;\n  $ttl?: number;\n  soa?: SoaType;\n  ns?: NSType[];\n  a?: AType[];\n  aaaa?: AType[];\n  cname?: CNAMEType[];\n  mx?: MXType[];\n  ptr?: NSType[];\n  txt?: TXTType[];\n  srv?: SRVType[];\n  spf?: SPFType[];\n  uri?: URIType[];\n  $domain?: string;\n};\n\nexport class ZoneFile {\n  jsonZoneFile: ZoneFileObject;\n\n  constructor(zoneFile: ZoneFileObject | string) {\n    if (typeof zoneFile === 'object') {\n      this.jsonZoneFile = JSON.parse(JSON.stringify(zoneFile));\n    } else if (typeof zoneFile === 'string') {\n      this.jsonZoneFile = parseZoneFile(zoneFile);\n    } else {\n      this.jsonZoneFile = (undefined as unknown) as ZoneFileObject;\n    }\n  }\n\n  toJSON() {\n    return this.jsonZoneFile;\n  }\n\n  toString() {\n    return makeZoneFile(this.toJSON());\n  }\n}\n"],"names":["getZoneFileTemplate","makeZoneFile","jsonZoneFile","template","processOrigin","processTTL","processSOA","processNS","processA","processAAAA","processCNAME","processMX","processPTR","processTXT","processSRV","processSPF","processURI","processValues","replace","data","ret","name","ttl","key","value","record","host","ip","alias","preference","txtData","txt","Array","map","datum","join","priority","weight","port","target","Date","toISOString","time","Math","round","now","parseZoneFile","text","removeComments","flatten","parseRRs","re","_m","g1","captured","match","exec","replacement","push","arrText","split","cur","splice","index","length","rrs","rr","trim","uRR","toUpperCase","test","parseTXT","indexOf","$origin","$ttl","parseInt","soa","parseSOA","ns","parseNS","a","parseA","aaaa","parseAAAA","cname","parseCNAME","mx","parseMX","ptr","parsePTR","srv","parseSRV","spf","parseSPF","uri","parseURI","rrTokens","l","minimum","expire","retry","refresh","serial","rname","mname","isNaN","result","recordsSoFar","urrTokens","lastIndexOf","Error","indexTXT","stripText","tokenTxt","slice","currentOrigin","unshift","fullname","ZoneFile","zoneFile","JSON","parse","stringify","undefined","toJSON","toString"],"mappings":"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"}